environment:
  matrix:
    -
      job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      PYTHON: 'C:\Python39-x64'  # YAML treats '\\' and "\\" differently.
    -
      job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      PYTHON: '3.9'
    -
      job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      PYTHON: '3.8'
    -
      job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      PYTHON: '3.7'
    -
      job_name: deploy
      job_depends_on: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      PYTHON: '3.9'

  GIT_TOKEN:
    secure: +jQhxLpePj6hdDryfET/XpLo7VL9fhDXVHlwLOPp/nRDYe97TJAfd0XCTuPz1qkT
  TWINE_USERNAME: __token__
  TWINE_PASSWORD:
    secure: +ZVhECKV0ESBrvUGXVd9wmqekK49PnIKW+rkN7Wb3cvSK1jAuiuOKH4Hx5u+aQsagyf72qhnVs+m0yHejMsU2uNgoGxQAawpsyAr3Yj3eCpEy0Mk75cnT/REa9i9WOMwIDDsdPcKrJIKeQdMsKHCn1CWg0COksQbECcm1wbTIamFflJ+MORMYrURwdaDqX5mJyFaER2+IrRQx0A0ZaU3hL4UhpTESvXdExz3/iwoVFnkN0liT//Uo0TTWEVMW5aOlpQ2eosM/jVubo90Ys/MGg==
  SONARCLOUD_TOKEN:
    secure: WhIOqdzyx8VkpAsNjwy4O+OiAQ4FzUu8d1sFcQ7xz8DlFABiNajhPv0lhc1Dpz7G
  COVERALLS_REPO_TOKEN: FIRr9jzyjV67BIyomHl1JnRe3t2TPfKvK

stack: python %PYTHON%
build: off
skip_tags: true

for:
  - # WINDOWS TEST
    matrix:
      only:
        - job_group: tests
          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    install:
      - 'systeminfo'
      # Configure Npcap. This is for testing the packet capture functionality in the UAVCAN/UDP transport.
      - '.test_deps\npcap-0.96.exe /loopback_support=yes /winpcap_mode=yes /S'
      # Installation of the NDIS filter driver from Npcap may have disrupted network connectivity, as explained in
      # https://github.com/nmap/npcap/issues/215. Also, a restart appears to be necessary to enable the NPF service.
      # Therefore, we restart the VM as suggested in https://github.com/appveyor/ci/issues/3491.
      - 'shutdown /r /f /t 5'
      - 'timeout 30'         # Boot-up delay. This should be sufficient for the VM to get ready. Increase if not.
      - 'route print & ipconfig /all'
      # Due to the reboot, all volatile configuration like environment variables is lost here. We need to set it up now.
      - 'set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%'
      - 'echo %PATH%'
      - 'git submodule update --init --recursive'
      - 'python -m pip install --upgrade pip setuptools nox'
    test_script:
      - 'nox --forcecolor --non-interactive --error-on-missing-interpreters --session test pristine'

  - # GNU/LINUX TEST
    matrix:
      only:
        - job_group: tests
          APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
    install:
      - 'export extras_pkg="linux-*-extra-$(uname -r)"'
      # Graphviz is needed for the docs, ncat is needed for testing the UAVCAN/serial transport.
      - 'sudo apt-get install -y $extras_pkg graphviz ncat'
      - 'git submodule update --init --recursive'
      - 'python -m pip install --upgrade pip setuptools nox'
      # Sonar scanner unconditionally fails on PR builds with a NullPointerException, so don't run it there.
      - '[[ -z "$APPVEYOR_PULL_REQUEST_HEAD_COMMIT" ]] || unset SONARCLOUD_TOKEN'
    test_script:
      - 'nox --non-interactive --error-on-missing-interpreters --session test pristine --python $PYTHON'
      - 'nox --non-interactive --error-on-missing-interpreters --session check_style docs'

  - # DEPLOYMENT
    matrix:
      only:
        - job_name: deploy
    branches:
      only:
        - master
    install:
      - git submodule update --init --recursive
      - python -m pip install --upgrade pip setuptools wheel twine
    deploy_script:
      # Ensure we deploy only from master, not from PR builds.
      - '[[ "$APPVEYOR_REPO_BRANCH" == "master" ]] && [[ -z "$APPVEYOR_PULL_REQUEST_HEAD_COMMIT" ]] || exit'
      # Configure git credentials.
      - echo "https://${GIT_TOKEN}:x-oauth-basic@github.com" > ~/.git-credentials
      - git config --global credential.helper store
      - git config --global user.email "hedgehoginthefog@uavcan.org"
      - git config --global user.name  "Release Automation"
      # Tag and publish this release. Push the tag after the release is out in case it could not be published.
      - 'git tag "$(cat pyuavcan/VERSION)"'
      - 'python setup.py sdist bdist_wheel'
      - 'python -m twine upload dist/*'
      - 'git push --tags'

artifacts:
  - path: '.nox/*/*/*.log'
