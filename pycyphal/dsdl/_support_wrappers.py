# Copyright (c) 2019 OpenCyphal
# This software is distributed under the terms of the MIT License.

"""
This module intentionally avoids importing ``nunavut_support`` at the module level to avoid dependency on
autogenerated code unless explicitly requested by the application.
"""

from typing import TypeVar, Type, Sequence, Any, Iterable, Optional, Dict
import pydsdl


T = TypeVar("T")


def serialize(obj: Any) -> Iterable[memoryview]:
    """
    A wrapper over ``nunavut_support.serialize``.
    The ``nunavut_support`` module will be generated automatically if it is not importable.
    """
    import nunavut_support

    return nunavut_support.serialize(obj)


def deserialize(dtype: Type[T], fragmented_serialized_representation: Sequence[memoryview]) -> Optional[T]:
    """
    A wrapper over ``nunavut_support.deserialize``.
    The ``nunavut_support`` module will be generated automatically if it is not importable.
    """
    import nunavut_support

    return nunavut_support.deserialize(dtype, fragmented_serialized_representation)


def get_model(class_or_instance: Any) -> pydsdl.CompositeType:
    """
    A wrapper over ``nunavut_support.get_model``.
    The ``nunavut_support`` module will be generated automatically if it is not importable.
    """
    import nunavut_support

    return nunavut_support.get_model(class_or_instance)


def get_class(model: pydsdl.CompositeType) -> type:
    """
    A wrapper over ``nunavut_support.get_class``.
    The ``nunavut_support`` module will be generated automatically if it is not importable.
    """
    import nunavut_support

    return nunavut_support.get_class(model)


def get_extent_bytes(class_or_instance: Any) -> int:
    """
    A wrapper over ``nunavut_support.get_extent_bytes``.
    The ``nunavut_support`` module will be generated automatically if it is not importable.
    """
    import nunavut_support

    return nunavut_support.get_extent_bytes(class_or_instance)


def get_fixed_port_id(class_or_instance: Any) -> Optional[int]:
    """
    A wrapper over ``nunavut_support.get_fixed_port_id``.
    The ``nunavut_support`` module will be generated automatically if it is not importable.
    """
    import nunavut_support

    return nunavut_support.get_fixed_port_id(class_or_instance)


def get_attribute(obj: Any, name: str) -> Any:
    """
    A wrapper over ``nunavut_support.get_attribute``.
    The ``nunavut_support`` module will be generated automatically if it is not importable.
    """
    import nunavut_support

    return nunavut_support.get_attribute(obj, name)


def set_attribute(obj: Any, name: str, value: Any) -> None:
    """
    A wrapper over ``nunavut_support.set_attribute``.
    The ``nunavut_support`` module will be generated automatically if it is not importable.
    """
    import nunavut_support

    return nunavut_support.set_attribute(obj, name, value)


def is_serializable(dtype: Any) -> bool:
    """
    A wrapper over ``nunavut_support.is_serializable``.
    The ``nunavut_support`` module will be generated automatically if it is not importable.
    """
    import nunavut_support

    return nunavut_support.is_serializable(dtype)


def is_message_type(dtype: Any) -> bool:
    """
    A wrapper over ``nunavut_support.is_message_type``.
    The ``nunavut_support`` module will be generated automatically if it is not importable.
    """
    import nunavut_support

    return nunavut_support.is_message_type(dtype)


def is_service_type(dtype: Any) -> bool:
    """
    A wrapper over ``nunavut_support.is_service_type``.
    The ``nunavut_support`` module will be generated automatically if it is not importable.
    """
    import nunavut_support

    return nunavut_support.is_service_type(dtype)


def to_builtin(obj: object) -> Dict[str, Any]:
    """
    A wrapper over ``nunavut_support.to_builtin``.
    The ``nunavut_support`` module will be generated automatically if it is not importable.
    """
    import nunavut_support

    return nunavut_support.to_builtin(obj)


def update_from_builtin(destination: T, source: Any) -> T:
    """
    A wrapper over ``nunavut_support.update_from_builtin``.
    The ``nunavut_support`` module will be generated automatically if it is not importable.
    """
    import nunavut_support

    return nunavut_support.update_from_builtin(destination, source)
